/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/organizationManager/v0/organizations/{organization_uuid}/addresses": {
    get: {
      parameters: {
        path: {
          organization_uuid: string;
        };
      };
      responses: {
        /** Returned when successful */
        200: {
          schema: {
            /** @description number of the page */
            page?: number;
            /** @description Number of items per page */
            perPage?: number;
            /** @description Total number of the found items */
            total?: number;
            /** @description list of addresses */
            data?: {
              /** @description UUID of address */
              uuid?: string;
              /** @description Type string of address */
              type?: string;
              /** @description address's full name */
              fullName?: string;
              /** @description address's suffix name */
              suffixName?: string;
              /** @description address's line number 1 */
              addressLine1?: string;
              /** @description address's line number 2 */
              addressLine2?: string;
              /** @description address's label for frontend */
              label?: string;
              /** @description address's city */
              city?: string;
              /** @description address's state */
              state?: string;
              /** @description address's zip */
              zip?: string;
              country?: {
                /** @description Country of residence (ISO 3166-1 alpha-2) */
                iso?: string;
              };
            }[];
          };
        };
      };
    };
  };
  "/api/organizationManager/v0/search": {
    get: {
      parameters: {
        query: {
          /** Address required if latitude and longitude coordinates are empty */
          address?: string;
          /** Radius in kilometers */
          radiusKm: number;
          /** latitude coordinate */
          latitude?: number;
          /** longitude coordinate */
          longitude?: number;
        };
      };
      responses: {
        /** Returned when successful */
        200: {
          schema: {
            /** @description Unique number of organization */
            uuid?: string;
            /** @description Name of organization */
            name?: string;
            /** @description Visible organization on platform */
            visible?: boolean;
            /** @description distance beetwen search address and organization in kilometres */
            distance?: number;
            experts?: {
              /** @description Unique number of expert */
              expertUuid?: string;
            }[];
            address?: {
              /** @description UUID of address */
              uuid?: string;
              /** @description Type string of address */
              type?: string;
              /** @description address's full name */
              fullName?: string;
              /** @description address's suffix name */
              suffixName?: string;
              /** @description address's line number 1 */
              addressLine1?: string;
              /** @description address's line number 2 */
              addressLine2?: string;
              /** @description address's label for frontend */
              label?: string;
              /** @description address's city */
              city?: string;
              /** @description address's state */
              state?: string;
              /** @description address's zip */
              zip?: string;
              country?: {
                /** @description Country of residence (ISO 3166-1 alpha-2) */
                iso?: string;
              };
            };
          }[];
        };
      };
    };
  };
}

export interface operations {}

export interface external {}

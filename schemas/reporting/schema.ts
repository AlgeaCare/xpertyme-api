/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/reportingManager/v0/calendarEvents/personal": {
    get: {
      parameters: {
        query: {
          /** Event status filter (supported values: `all`, `finished`, `canceled`, `active`, `created`) */
          status: string;
          /** Page number */
          page: number;
          /** Number of entries per page */
          perPage: number;
          /** Calendar event start date from (format yyyy-MM-dd) */
          startDateFrom: string;
          /** Calendar event start date to (format yyyy-MM-dd) */
          startDateTo: string;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          schema: {
            /** @description Bank account id */
            dateCreated?: string;
            /** @description Bank account status */
            startDate?: string;
            /** @description Owner name */
            endDate?: string;
            /**
             * @description Appointment format type
             * @enum {integer}
             */
            formatType?: "1 - online" | "2 - offline" | "3 - phone";
            /** @description BIC */
            calendarEventId?: string;
            /**
             * @description Calendar event status
             * @enum {integer}
             */
            status?:
              | "0 - created"
              | "1 - canceled"
              | "2 - active"
              | "3 - finished";
            participant?: definitions["User"];
            expert?: definitions["User"];
          }[];
        };
        /** Bad request */
        400: unknown;
      };
    };
  };
  "/api/reportingManager/v0/users": {
    get: {
      parameters: {
        query: {
          /** Users type filter (supported values: `all`, `experts`, `clients`) */
          usersType: string;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          schema: definitions["User2"][];
        };
        /** Bad request */
        400: unknown;
      };
    };
  };
  "/api/reportingManager/v0/{calendar}/workingHours": {
    get: {
      parameters: {
        path: {
          calendar: string;
        };
      };
      responses: {
        /** Successful operation */
        200: {
          schema: definitions["WorkingHours"][];
        };
        /** Bad request */
        400: unknown;
      };
    };
  };
}

export interface definitions {
  User: {
    uuid?: string;
    email?: string;
    firstName?: string;
    lastName?: string;
    /** Format: date-time */
    birthday?: string;
    externalId?: string;
  };
  User2: {
    id?: number;
    uuid?: string;
    email?: string;
    firstName?: string;
    lastName?: string;
    salutation?: definitions["Salutation"];
    /** Format: date-time */
    birthday?: string;
    phone?: string;
    /** Format: date-time */
    dateCreated?: string;
    isExpert?: boolean;
    externalId?: string;
  };
  WorkingHours: {
    uuid?: string;
    name?: string;
    repeatingType?: number;
    repeatingPeriod?: number;
    /** Format: date-time */
    dateStarted?: string;
    /**
     * If null: infinite series
     * Format: date-time
     */
    dateFinished?: string;
    timeIntervals?: definitions["WorkingHoursTimeInterval"][];
    visitReasonsList?: definitions["VisitReason"][];
    exceptions?: definitions["WorkingHoursException"][];
  };
  Salutation: {
    id?: number;
    /** Translations */
    translations?: definitions["SalutationTranslation"][];
  };
  WorkingHoursTimeInterval: { [key: string]: unknown };
  VisitReason: { [key: string]: unknown };
  WorkingHoursException: { [key: string]: unknown };
  SalutationTranslation: {
    locale?: string;
    name?: string;
  };
}

export interface operations {}

export interface external {}
